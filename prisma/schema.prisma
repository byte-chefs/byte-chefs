generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  firstName     String?
  lastName      String?
  aboutMe       String?
  profileImage  String?
  allergens     String[]
  role          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  recipes       Recipe[]
  userFavorites UserFavorites[]
}

model Recipe {
  id              Int             @id @default(autoincrement())
  name            String
  photo           String?
  cookingTime     Int
  calories        Int             @default(0)
  favouritesTotal Int             @default(0)
  difficulty      String?
  status          String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  userId          Int
  description     String[]
  personServing   Int             @default(2)
  carbs           Int             @default(0)
  fat             Int             @default(0)
  protein         Int             @default(0)
  ingredients     Ingredient[]
  user            User            @relation(fields: [userId], references: [id])
  tags            RecipeTag[]
  userFavorites   UserFavorites[]
}

model Ingredient {
  id        Int     @id @default(autoincrement())
  foodId    Int
  servingId Int
  quantity  Int
  recipeId  Int
  name      String?
  calories  Int     @default(0)
  carbs     Int     @default(0)
  fat       Int     @default(0)
  protein   Int     @default(0)
  recipe    Recipe  @relation(fields: [recipeId], references: [id])
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String
  include   String[]
  exclude   String[]
  recipeTag RecipeTag[]
}

model RecipeTag {
  recipeId Int
  tagId    Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  tag      Tag    @relation(fields: [tagId], references: [id])

  @@id([recipeId, tagId])
}

model UserFavorites {
  userId   Int
  recipeId Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  user     User   @relation(fields: [userId], references: [id])

  @@id([userId, recipeId])
}
